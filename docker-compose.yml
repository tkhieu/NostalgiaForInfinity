---

x-common-settings:
  &common-settings
  image: freqtradeorg/freqtrade:stable
  build:
    context: .
    dockerfile: "./docker/Dockerfile.custom"
  restart: unless-stopped
  volumes:
    - "./user_data:/freqtrade/user_data"
    - "./user_data/data:/freqtrade/user_data/data"
    - "./configs:/freqtrade/configs"
    - "./${FREQTRADE__STRATEGY:-NostalgiaForInfinityX6}.py:/freqtrade/${FREQTRADE__STRATEGY:-NostalgiaForInfinityX6}.py"
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:${FREQTRADE__API_SERVER__LISTEN_PORT:-8080}"]
    interval: 1m30s
    timeout: 10s
    retries: 3
    start_period: 40s
    start_interval: 5s
  env_file:
    - path: .env
      required: false # default true

services:
  freqtrade:
    <<: *common-settings
    container_name: ${FREQTRADE__BOT_NAME:-Example_Test_Account}_${FREQTRADE__EXCHANGE__NAME:-binance}_${FREQTRADE__TRADING_MODE:-futures}-${FREQTRADE__STRATEGY:-NostalgiaForInfinityX6}
    ports:
      - "${FREQTRADE__API_SERVER__LISTEN_PORT:-8080}:${FREQTRADE__API_SERVER__LISTEN_PORT:-8080}"
    # Default command used when running `docker compose up`
    command: >
      trade
      --db-url sqlite:////freqtrade/user_data/${FREQTRADE__BOT_NAME:-Example_Test_Account}_${FREQTRADE__EXCHANGE__NAME:-binance}_${FREQTRADE__TRADING_MODE:-futures}-tradesv3.sqlite
      --log-file user_data/logs/${FREQTRADE__BOT_NAME:-Example_Test_Account}-${FREQTRADE__EXCHANGE__NAME:-binance}-${FREQTRADE__STRATEGY:-NostalgiaForInfinityX6}-${FREQTRADE__TRADING_MODE:-futures}.log
      --strategy-path .
    networks:
      - freqtrade_network # Connect Caddy to a custom network for your services

  caddy:
    image: caddy:latest # Use the latest official Caddy image
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # For HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile # Your Caddy configuration file
      - caddy_data:/data # Persistent storage for Caddy's data (e.g., certificates)
      - caddy_config:/config # Persistent storage for Caddy's configuration
    networks:
      - freqtrade_network # Connect Caddy to a custom network for your services

volumes:
  caddy_data:
  caddy_config:

networks:
  freqtrade_network:
    driver: bridge # Or choose a different driver if needed
